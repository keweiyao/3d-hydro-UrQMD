#!/bin/bash

# extra preparation when compiling on the OSG submit host
if [[ $(hostname) == 'xd-login.opensciencegrid.org' ]]; then
  # load lmod
  echo $(hostname)
  source /cvmfs/oasis.opensciencegrid.org/osg/modules/lmod/current/init/bash

  # load necessary modules:
  #  - recent version of gcc, for c++11 among other things
  #  - recent version of cmake
  #  - boost for c++ codes
  #  - hdf5 for trento
  #  - python and packages for generating the vishnew EOS table
  module purge
  module load gsl/1.16 gcc cmake boost hdf5 python/2.7 root/5.34-32 all-pkgs

  # the modules set the standard environment variables CPATH and LIBRARY_PATH
  # set corresponding variables for cmake
  export CMAKE_INCLUDE_PATH=$CPATH
  export CMAKE_LIBRARY_PATH=$LIBRARY_PATH
  echo $LIBRARY_PATH
  # set c++ and fortran compiler flags
  export CXXFLAGS="-march=x86-64 -mtune=intel"
  export FFLAGS="$CXXFLAGS"

  # explicitly set fortran compiler to override cmake default
  export FC='gfortran'

  # set linker flags to prefer the module versions of libraries to the system versions
  # the linker reads $LIBRARY_PATH but gives it lower priority than the standard paths
  # this uses -L flags to give $LIBRARY_PATH higher priority
  export LDFLAGS="-L${LIBRARY_PATH//:/ -L}"
fi

pkgname='hic-3d-osg-cut'

# create a temporary directory for installing files
installdir=$(mktemp --directory)
# and ensure it's cleaned on exit
trap "rm -r $installdir" EXIT


# build each model
for i in models/*/; do
  pushd $i
  echo "Working on project $i"
  
  # create build directory and run cmake if necessary
  if [[ -f CMakeLists.txt ]]; then
    if [[ -d build ]]; then
      cd build
    else
      mkdir build && cd build
    fi
    # disable install prefix by setting it to "/"
    # the actual install location will be set by DESTDIR later
    cmake -DCMAKE_INSTALL_PREFIX="/" ..
    # compile and install to the temporary directory
    
    make --jobs=$(nproc) DESTDIR=$installdir/$pkgname install || exit 1
  else
    python script.py
  fi
  
  popd
done

# install the event runner script
cp -v models/run.py models/preprocessing.py models/calc_dndy.py $installdir/$pkgname

# create tgz for distributing to each job
tar --verbose --create --gzip --file $pkgname.tar.gz  --directory $installdir $pkgname




